name: DEV actions
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  SERVER_URL: ${{ secrets.SERVER_URL }}
  USERNAME: ${{ secrets.CLI_USERNAME }}
  PASSWORD: ${{ secrets.CLI_PASSWORD }}
on:
  push:
    branches-ignore:
      - master
jobs:
  db-tool:
    name: DB tool
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./db/manager
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npm run build

  build-common:
    name: Build 'common'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./common
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: common
          retention-days: 1
          path: ./common/dist/

  build-server:
    name: Build 'server'
    needs: build-common
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - uses: actions/download-artifact@v3
        with:
          name: common
          path: ./common/dist/
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: server
          retention-days: 1
          path: ./server/dist/

  notify-deployment:
    name: Notify deployment
    needs: build-server
    continue-on-error: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - uses: actions/download-artifact@v3
        with:
          name: common
          path: ./common/dist/
      - uses: actions/download-artifact@v3
        with:
          name: server
          path: ./server/dist/
      - run: npm ci
      - run: npm run build
      - run: node cli Notify deployment
        working-directory: ../

  lint-and-tests-common:
    needs: build-common
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./common

  lint-and-tests-server:
    needs: build-server
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./server

  lint-and-tests-web:
    needs: build-server
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./web

  deploy-server:
    name: Deploy server
    needs: [lint-and-tests-server, notify-deployment]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server/deploy
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm start -- --key=${{ secrets.RENDER_API_KEY_DEV }} --serviceId=${{ secrets.SERVICE_ID_DEV }}

  deploy-web-preview:
    name: Deploy web preview
    needs: [lint-and-tests-web, deploy-server]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v3
      - run: npm install --global vercel@latest
      - run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
