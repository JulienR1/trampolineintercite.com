name: Deploy
on:
  workflow_call:
    inputs:
      production:
        required: false
        type: boolean
      server_url:
        required: true
        type: string
      cli_username:
        required: true
        type: string
    secrets:
      cli_password:
        required: true
      render_api_key:
        required: true
      render_service_id:
        required: true

jobs:
  db-tool:
    name: DB tool
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./db/manager
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build

  build-common:
    name: Build 'common'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./common
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: common
          retention-days: 1
          path: ./common/dist/

  build-server:
    name: Build 'server'
    needs: build-common
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: common
          path: ./common/dist/
      - run: npm ci
        working-directory: ./common/
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: server
          retention-days: 1
          path: ./server/dist/

  build-cli:
    name: Build CLI
    needs: build-server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: common
          path: ./common/dist/
      - run: npm ci
        working-directory: ./common/
      - uses: actions/download-artifact@v3
        with:
          name: server
          path: ./server/dist/
      - run: npm ci
        working-directory: ./server/
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: cli
          retention-days: 1
          path: ./cli/dist/

  notify-deployment:
    name: Notify deployment
    needs: build-cli
    runs-on: ubuntu-latest
    if: ${{ inputs.production == true }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - uses: actions/download-artifact@v3
        with:
          name: cli
          path: ./cli/dist/
      - run: npm ci
        working-directory: ./cli
      - run: node cli Notify deployment
        env:
          SERVER_URL: ${{ inputs.server_url }}
          EMAIL: ${{ inputs.cli_username }}
          PASSWORD: ${{ secrets.cli_password }}

  lint-and-tests-common:
    needs: build-common
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./common

  lint-and-tests-server:
    needs: build-server
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./server

  lint-and-tests-web:
    needs: build-server
    uses: ./.github/workflows/lint-test.template.yml
    with:
      dir: ./web

  deploy-server:
    name: Deploy server
    needs: [lint-and-tests-server, notify-deployment]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server/deploy
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm start -- --key=${{ secrets.render_api_key }} --serviceId=${{ secrets.render_service_id }}

  deploy-web-preview:
    name: Deploy web preview
    needs: [lint-and-tests-web, deploy-server]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: common
          path: ./common/dist/
      - run: npm ci
        working-directory: ./common/
      - uses: actions/download-artifact@v3
        with:
          name: server
          path: ./server/dist/
      - run: npm ci
        working-directory: ./server/
      - run: npm install --global vercel@latest
      - run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
